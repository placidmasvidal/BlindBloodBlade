package com.xaviplacidpol.blindbloodblade.overlays;

import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.utils.Array;
import com.badlogic.gdx.utils.viewport.ExtendViewport;
import com.badlogic.gdx.utils.viewport.Viewport;
import com.xaviplacidpol.blindbloodblade.entities.BloodSplash;
import com.xaviplacidpol.blindbloodblade.entities.NinjaPlayer;
import com.xaviplacidpol.blindbloodblade.entities.RoninPlayer;
import com.xaviplacidpol.blindbloodblade.scenes.Level;
import com.xaviplacidpol.blindbloodblade.utils.Constants;

/**
 * Overlay where are stored all of splashes generated by killing enemies
 */
public class BloodSplashOverlay {

    public final Viewport viewport;

    private Level level;

    private Array<BloodSplash> bloodSplashes;


    public BloodSplashOverlay(Level level){
        this.viewport = new ExtendViewport(Constants.WORLD_SIZE, Constants.WORLD_SIZE);
        this.level = level;

    }

    /**
     * Initializes the array where the BloodSplashes will be stored
     */
    public void init( ){
        bloodSplashes = new Array<BloodSplash>();

    }

    /**
     *  Rener the blood splashes
     * @param batch SpriteBatch witch will be used to draw the splashes
     */
    public void render(SpriteBatch batch){
        viewport.apply();
        batch.setProjectionMatrix(viewport.getCamera().combined);

        //Get the array of bloodSplashes from Level
        bloodSplashes = level.getBloodSplashesScreen();

        //Loop to draw all bloodSplashes
        for(BloodSplash bloodSplash : bloodSplashes){
            if(level.getPlayer().getClass().equals(NinjaPlayer.class)) {
                bloodSplash.render(batch, Constants.BLOOD_SPLASH_OVERLAY_SCALE);
            } else if (level.getPlayer().getClass().equals(RoninPlayer.class)){
                bloodSplash.render(batch, Constants.BLOOD_SPLASH_OVERLAY_SCALE_R);
            }
        }

    }
}
